import { NextResponse } from "next/server"

export async function POST(request: Request, { params }: { params: { name: string } }) {
  try {
    const sectionName = params.name

    // In a real application, you would call your FastAPI backend
    // const response = await fetch(`${process.env.BACKEND_URL}/section/${sectionName}/run`, {
    //   method: "POST",
    // });
    // const data = await response.json();

    // For demo purposes, we'll just echo back a response
    const data = {
      content: `This is regenerated content for the "${decodeURIComponent(
        sectionName,
      )}" section. In a real application, this would be generated by the LangGraph agent.`,
    }

    return NextResponse.json(data)
  } catch (error) {
    console.error("Error in section run API:", error)
    return NextResponse.json({ error: "Failed to run section" }, { status: 500 })
  }
}
